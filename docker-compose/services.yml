# about: address=*:500? == opening port for remote debugging
# -Xms128m -Xmx256m == min and max jvm heap sizes
# volumes -> maps docker logs folder to folder inside service when mvn 'build image' is called
# "ENCRYPT_KEY..." == obtaining encrypt key env variable when built
# see .env for GROUP_ID and GLOBAL_NETWORK (as on same network), microservices can communicate with each other.
# -----> update to check config server up before starting twitter-to-kafka-service:
# user: root to enable update and curl installation
# entrypoint: shell.sh == overriding normal entrypoint to ensure .sh runs first
# original entrypoint ./cnb/lifecycle/launcher is the last line of the .sh
# localhost:8888 will no longer reach containerized config server -> SPRING_CLOUD_CONFIG_URI..
# depends_on: added
version: '3.7'
services:
  twitter-to-kafka-service:
    image: ${GROUP_ID}/twitter.to.kafka.service:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/twitter-to-kafka-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=true"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}

  kafka-to-elastic-service:
    image: ${GROUP_ID}/kafka.to.elastic.service:${SERVICE_VERSION:-latest}
    ports:
      - "5006:5006"
    volumes:
      - "./docker-logs:/kafka-to-elastic-service/logs"
      - "./check-kafka-topics-created.sh:/usr/local/bin/check-kafka-topics-created.sh"
    user: root
    entrypoint: [check-kafka-topics-created.sh]
    depends_on:
      - config-server
      - twitter-to-kafka-service
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      # This can override the setting in config-client-kafka-to-elastic.yml
      - "USE-REPOSITORY-INDEX-CLIENT=false"
    networks:
      - ${GLOBAL_NETWORK:-services}
  # port 8888 opened in container so kafka-to-elastic-service can access container on http://localhost:8888 when this service is running locally
  # 8888 is specified in config-server application.yml
  config-server:
    image: ${GROUP_ID}/config.server:${SERVICE_VERSION:-latest}
    ports:
      - "5007:5007"
      - "8888:8888"
    volumes:
      - "./docker-logs:/config-server/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5007:5007"
      - "8888:8888"
    volumes:
      - "./docker-logs:/elastic-query-service/logs"
    depends_on:
      - kafka-to-elastic-service
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_PORT=8183"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.microservices.demo</groupId>
    <artifactId>microservices-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>microservices-demo</name>
    <description>Microservices demo project for Spring Boot</description>
    <!-- Not the ideal, but, adding to settings not working poss iJ settings issue-->
    <repositories>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <modules>
        <module>app-config-data</module>
        <module>common-config</module>
        <module>config-server</module>
        <module>kafka/kafka-admin</module>
        <module>kafka/kafka-consumer</module>
        <module>kafka/kafka-model</module>
        <module>kafka/kafka-producer</module>
        <module>twitter-to-kafka-service</module>
        <module>kafka-to-elastic-service</module>
        <module>elastic</module>
        <module>common-util</module>
        <module>elastic-query-service</module>
    </modules>

    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <twitter4j.version>4.0.7</twitter4j.version>
        <lombok.version>1.18.16</lombok.version>
        <avro.version>1.10.0</avro.version>
        <spring-kafka.version>2.6.2</spring-kafka.version>
        <spring-retry.version>1.3.0</spring-retry.version>
        <kafka-avro-serializer.version>5.5.1</kafka-avro-serializer.version>
        <spring-cloud.version>2.2.6.RELEASE</spring-cloud.version>
        <spring-cloud-dependencies.version>Hoxton.SR9</spring-cloud-dependencies.version>
        <elasticsearch.version>7.9.1</elasticsearch.version>
    </properties>

    <!--Dependencies managed here available to submodules with versions controlled centrally-->
    <dependencyManagement>
        <dependencies>
            <!--LOCAL-->
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-query-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>common-util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-query-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-index-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>elastic-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>app-config-data</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>common-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-consumer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-admin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microservices.demo</groupId>
                <artifactId>kafka-producer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--EXT-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>5.5.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${spring-cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <scope>provided</scope> <!-- compile time only tool hence 'provided'-->
                <version>${lombok.version}</version>
            </dependency>

            <!--Requirement end included only as docker compose up was getting: Error response from daemon: Get "https://com.microservices/v2/": dial tcp: lookup com.microservices on 192.168.178.1:53: no such host
 -->
            <dependency>
                <groupId>org.twitter4j</groupId>
                <artifactId>twitter4j-stream</artifactId>
                <version>${twitter4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <!--not in pManagement as project wide -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
